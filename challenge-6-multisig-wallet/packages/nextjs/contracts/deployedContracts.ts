/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  31337: {
    MetaMultisigWallet: {
      address: "0x0165878a594ca255338adfa4d48449f69242eb8f",
      abi: [
        {
          type: "constructor",
          inputs: [
            {
              name: "owners",
              type: "address[]",
              internalType: "address[]",
            },
            {
              name: "requiredSigners",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "receive",
          stateMutability: "payable",
        },
        {
          type: "function",
          name: "_getSignerFromMessage",
          inputs: [
            {
              name: "ethMessageHash",
              type: "bytes32",
              internalType: "bytes32",
            },
            {
              name: "signature",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "pure",
        },
        {
          type: "function",
          name: "addSigner",
          inputs: [
            {
              name: "who",
              type: "address",
              internalType: "address",
            },
            {
              name: "newRequiredSigners",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "executeTransaction",
          inputs: [
            {
              name: "callData",
              type: "bytes",
              internalType: "bytes",
            },
            {
              name: "signatures",
              type: "bytes[]",
              internalType: "bytes[]",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "getHash",
          inputs: [
            {
              name: "funcName",
              type: "string",
              internalType: "string",
            },
            {
              name: "user",
              type: "address",
              internalType: "address",
            },
            {
              name: "argument",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          stateMutability: "pure",
        },
        {
          type: "function",
          name: "isOwnerActive",
          inputs: [
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "removeSigner",
          inputs: [
            {
              name: "who",
              type: "address",
              internalType: "address",
            },
            {
              name: "newRequiredSigners",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "s_nonce",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "s_numRequiredSigners",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "s_owners",
          inputs: [
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "isActive",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "s_ownersLength",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "transferFunds",
          inputs: [
            {
              name: "to",
              type: "address",
              internalType: "address",
            },
            {
              name: "amount",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "event",
          name: "SignerAdded",
          inputs: [
            {
              name: "who",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "newReqSigners",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "SignerRemoved",
          inputs: [
            {
              name: "who",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "newReqSigners",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "TransferSent",
          inputs: [
            {
              name: "who",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "amount",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "error",
          name: "ECDSAInvalidSignature",
          inputs: [],
        },
        {
          type: "error",
          name: "ECDSAInvalidSignatureLength",
          inputs: [
            {
              name: "length",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "ECDSAInvalidSignatureS",
          inputs: [
            {
              name: "s",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
        },
        {
          type: "error",
          name: "MetaMultisigWallet__AmountCannotBeZero",
          inputs: [],
        },
        {
          type: "error",
          name: "MetaMultisigWallet__MoreSignersNeeded",
          inputs: [],
        },
        {
          type: "error",
          name: "MetaMultisigWallet__NoZeroAddress",
          inputs: [],
        },
        {
          type: "error",
          name: "MetaMultisigWallet__NotEnoughBalance",
          inputs: [],
        },
        {
          type: "error",
          name: "MetaMultisigWallet__OnlyCallableBySelfContract",
          inputs: [],
        },
        {
          type: "error",
          name: "MetaMultisigWallet__SignerAlreadySigned",
          inputs: [],
        },
        {
          type: "error",
          name: "MetaMultisigWallet__SignerNotValid",
          inputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "MetaMultisigWallet__TransferError",
          inputs: [],
        },
      ],
      inheritedFunctions: {},
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
